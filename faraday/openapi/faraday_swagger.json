{
    "info": {
        "description": "The Faraday REST API enables you to interact with [our server](https://github.com/infobyte/faraday).\nUse this API to interact or integrate with Faraday server. This page documents the REST API, with HTTP response codes and example requests and responses.",
        "title": "Faraday 4.3.3 API",
        "version": "v3"
    },
    "security": {
        "basicAuth": []
    },
    "servers": [
        {
            "url": "http://localhost:5985/_api"
        }
    ],
    "paths": {
        "/logout": {},
        "/login": {},
        "/verify": {},
        "/change": {},
        "/v3/ws/{workspace_name}/commands/activity_feed": {
            "get": {
                "tags": [
                    "Command"
                ],
                "description": "Gets a summary of the latest executed commands",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/commands/count": {
            "get": {
                "tags": [
                    "Command"
                ],
                "summary": "Group Command by the field set in the group_by GET parameter.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "group_by is not specified"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/commands/{object_id}": {
            "delete": {
                "tags": [
                    "Command"
                ],
                "summary": "Deletes Command",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "Command"
                ],
                "summary": "Retrieves Command",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Command"
                ],
                "summary": "Updates Command",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Command"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Command"
                ],
                "summary": "Updates Command",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Command"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/commands": {
            "get": {
                "tags": [
                    "Command"
                ],
                "summary": "Get a list of Command.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Command"
                ],
                "summary": "Creates Command",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Command"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/commands/last": {
            "get": {
                "tags": [
                    "Command"
                ],
                "description": "Gets the last executed command",
                "responses": {
                    "200": {
                        "description": "Last executed command or an empty json"
                    }
                }
            }
        },
        "/v3/global_commands/{object_id}": {
            "get": {
                "tags": [
                    "Command"
                ],
                "summary": "Retrieves Command",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/global_commands": {
            "get": {
                "tags": [
                    "Command"
                ],
                "summary": "Get a list of Command.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/activities/count": {
            "get": {
                "tags": [
                    "Command"
                ],
                "summary": "Group Command by the field set in the group_by GET parameter.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityFeed"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "group_by is not specified"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/activities/{object_id}": {
            "delete": {
                "tags": [
                    "Command"
                ],
                "summary": "Deletes Command",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "Command"
                ],
                "summary": "Retrieves Command",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityFeed"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Command"
                ],
                "summary": "Updates Command",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityFeed"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityFeed"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityFeed"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Command"
                ],
                "summary": "Updates Command",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityFeed"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityFeed"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityFeed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/activities": {
            "get": {
                "tags": [
                    "Command"
                ],
                "summary": "Get a list of Command.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityFeed"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Command"
                ],
                "summary": "Creates Command",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityFeed"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityFeed"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityFeed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/credential": {
            "delete": {
                "tags": [
                    "Credential"
                ],
                "summary": "Delete a group of Credential by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Credential"
                ],
                "summary": "Delete a group of Credential by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "get": {
                "tags": [
                    "Credential"
                ],
                "summary": "Get a list of Credential.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Credential"
                ],
                "summary": "Creates Credential",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credential"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/credential/count": {
            "get": {
                "tags": [
                    "Credential"
                ],
                "summary": "Group Credential by the field set in the group_by GET parameter.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "group_by is not specified"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/credential/{object_id}": {
            "delete": {
                "tags": [
                    "Credential"
                ],
                "summary": "Deletes Credential",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "Credential"
                ],
                "summary": "Retrieves Credential",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Credential"
                ],
                "summary": "Updates Credential",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credential"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Credential"
                ],
                "summary": "Updates Credential",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credential"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/hosts/bulk_create": {
            "post": {
                "tags": [
                    "Bulk",
                    "Host"
                ],
                "description": "Creates hosts in bulk",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Host"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/hosts": {
            "delete": {
                "tags": [
                    "Host"
                ],
                "summary": "Delete a group of Host by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Host"
                ],
                "summary": "Delete a group of Host by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "get": {
                "summary": "Get a list of hosts.",
                "tags": [
                    "Host"
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Host"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Host"
                ],
                "summary": "Creates Host",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Host"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Host"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Host"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/hosts/count": {
            "get": {
                "tags": [
                    "Host"
                ],
                "summary": "Group Host by the field set in the group_by GET parameter.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Host"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "group_by is not specified"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/hosts/count_multi_workspace": {
            "get": {
                "tags": [
                    "Host"
                ],
                "summary": "Count Host by multiples workspaces",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Host"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No workspace passed or group_by is not specified"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/hosts/countVulns": {
            "get": {
                "tags": [
                    "Host"
                ],
                "summary": "Counts Vulnerabilities per host",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HostCount"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/hosts/{object_id}": {
            "delete": {
                "tags": [
                    "Host"
                ],
                "summary": "Deletes Host",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "Host"
                ],
                "summary": "Retrieves Host",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Host"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Host"
                ],
                "summary": "Updates Host",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Host"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Host"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Host"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Host"
                ],
                "summary": "Updates Host",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Host"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Host"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Host"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/hosts/filter": {
            "get": {
                "tags": [
                    "Filter",
                    "Host"
                ],
                "description": "Filters, sorts and groups hosts using a json with parameters. These parameters must be part of the model.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "q",
                        "description": "Recursive json with filters that supports operators. The json could also contain sort and group."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns filtered, sorted and grouped results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlaskRestless"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid q was sent to the server"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/hosts/{host_id}/services": {
            "get": {
                "tags": [
                    "Host",
                    "Service"
                ],
                "summary": "Get the services of a host",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/hosts/{host_id}/tools_history": {
            "get": {
                "tags": [
                    "Host",
                    "Command"
                ],
                "summary": "Get the command impacted by a host",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/info": {
            "get": {
                "tags": [
                    "Informational"
                ],
                "description": "Gives basic info about the faraday service",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/config": {
            "get": {
                "tags": [
                    "Informational"
                ],
                "description": "Gives basic info about the faraday configuration",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/v3/licenses/{object_id}": {
            "delete": {
                "tags": [
                    "License"
                ],
                "summary": "Deletes License",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "License"
                ],
                "summary": "Retrieves License",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/License"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "License"
                ],
                "summary": "Updates License",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/License"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/License"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/License"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "License"
                ],
                "summary": "Updates License",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/License"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/License"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/License"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/licenses": {
            "get": {
                "tags": [
                    "License"
                ],
                "summary": "Get a list of License.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/License"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "License"
                ],
                "summary": "Creates License",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/License"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/License"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/License"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/services": {
            "delete": {
                "tags": [
                    "Service"
                ],
                "summary": "Delete a group of Service by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Service"
                ],
                "summary": "Delete a group of Service by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Get a list of Service.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Creates Service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Service"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/services/count": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Group Service by the field set in the group_by GET parameter.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "group_by is not specified"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/services/{object_id}": {
            "delete": {
                "tags": [
                    "Service"
                ],
                "summary": "Deletes Service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Retrieves Service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Service"
                ],
                "summary": "Updates Service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Service"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Service"
                ],
                "summary": "Updates Service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Service"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/session": {
            "get": {
                "tags": [
                    "Informational"
                ],
                "description": "Gives info about the current session",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/vulns": {
            "delete": {
                "tags": [
                    "VulnerabilityGeneric"
                ],
                "summary": "Delete a group of VulnerabilityGeneric by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "patch": {
                "tags": [
                    "VulnerabilityGeneric"
                ],
                "summary": "Delete a group of VulnerabilityGeneric by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "get": {
                "tags": [
                    "VulnerabilityGeneric"
                ],
                "summary": "Get a list of VulnerabilityGeneric.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityWeb"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "VulnerabilityGeneric"
                ],
                "summary": "Creates VulnerabilityGeneric",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VulnerabilityWeb"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityWeb"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityWeb"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/vulns/count": {
            "get": {
                "tags": [
                    "Vulnerability"
                ],
                "summary": "Group vulnerabilities by the field set in the group_by GET parameter.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityWeb"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "group_by is not specified"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/vulns/count_multi_workspace": {
            "get": {
                "tags": [
                    "VulnerabilityGeneric"
                ],
                "summary": "Count VulnerabilityGeneric by multiples workspaces",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityWeb"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No workspace passed or group_by is not specified"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/vulns/{object_id}": {
            "delete": {
                "tags": [
                    "VulnerabilityGeneric"
                ],
                "summary": "Deletes VulnerabilityGeneric",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "VulnerabilityGeneric"
                ],
                "summary": "Retrieves VulnerabilityGeneric",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityWeb"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "VulnerabilityGeneric"
                ],
                "summary": "Updates VulnerabilityGeneric",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VulnerabilityWeb"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityWeb"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityWeb"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "VulnerabilityGeneric"
                ],
                "summary": "Updates VulnerabilityGeneric",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VulnerabilityWeb"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityWeb"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityWeb"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/vulns/{vuln_id}/attachment/{attachment_filename}": {
            "delete": {
                "tags": [
                    "Vulnerability",
                    "File"
                ],
                "description": "Remove a vuln attachment",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            },
            "get": {
                "tags": [
                    "Vulnerability",
                    "File"
                ],
                "description": "Get a vuln attachment",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/vulns/export_csv": {
            "get": {
                "tags": [
                    "Vulnerability",
                    "File"
                ],
                "description": "Get a CSV file with all vulns from a workspace",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/vulns/filter": {
            "get": {
                "tags": [
                    "Filter",
                    "Vulnerability"
                ],
                "description": "Filters, sorts and groups vulnerabilities using a json with parameters. These parameters must be part of the model.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "q",
                        "description": "Recursive json with filters that supports operators. The json could also contain sort and group."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns filtered, sorted and grouped results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlaskRestless"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid q was sent to the server"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/vulns/{vuln_id}/attachment": {
            "get": {
                "tags": [
                    "Vulnerability",
                    "File"
                ],
                "description": "Gets an attachment for a vulnerability",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Evidence"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Workspace disabled or no permission"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Vulnerability",
                    "File"
                ],
                "description": "Creates a new attachment in the vuln",
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/vulns/top_users": {
            "get": {
                "tags": [
                    "Vulnerability"
                ],
                "params": "limit",
                "description": "Gets a list of top users having account its uploaded vulns",
                "responses": {
                    "200": {
                        "description": "List of top users"
                    }
                }
            }
        },
        "/v3/vulnerability_template/bulk_create": {
            "post": {
                "tags": [
                    "Bulk",
                    "VulnerabilityTemplate"
                ],
                "description": "Creates Vulnerability templates in bulk",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityTemplate"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/v3/vulnerability_template": {
            "delete": {
                "tags": [
                    "VulnerabilityTemplate"
                ],
                "summary": "Delete a group of VulnerabilityTemplate by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "patch": {
                "tags": [
                    "VulnerabilityTemplate"
                ],
                "summary": "Update a group of VulnerabilityTemplate by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "get": {
                "tags": [
                    "VulnerabilityTemplate"
                ],
                "summary": "Get a list of VulnerabilityTemplate.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityTemplate"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "VulnerabilityTemplate"
                ],
                "summary": "Creates VulnerabilityTemplate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VulnerabilityTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityTemplate"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityTemplate"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/vulnerability_template/{object_id}": {
            "delete": {
                "tags": [
                    "VulnerabilityTemplate"
                ],
                "summary": "Deletes VulnerabilityTemplate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "VulnerabilityTemplate"
                ],
                "summary": "Retrieves VulnerabilityTemplate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityTemplate"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "VulnerabilityTemplate"
                ],
                "summary": "Updates VulnerabilityTemplate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VulnerabilityTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityTemplate"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityTemplate"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "VulnerabilityTemplate"
                ],
                "summary": "Updates VulnerabilityTemplate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VulnerabilityTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityTemplate"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VulnerabilityTemplate"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/vulnerability_template/filter": {
            "get": {
                "tags": [
                    "Filter",
                    "VulnerabilityTemplate"
                ],
                "description": "Filters, sorts and groups non workspaced objects using a json with parameters. These parameters must be part of the model.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "q",
                        "description": "Recursive json with filters that supports operators. The json could also contain sort and group."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns filtered, sorted and grouped results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlaskRestless"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid q was sent to the server"
                    }
                }
            }
        },
        "/v3/ws": {
            "delete": {
                "tags": [
                    "Workspace"
                ],
                "summary": "Delete a group of Workspace by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "get": {
                "summary": "Get a list of workspaces.",
                "tags": [
                    "Workspace"
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workspace"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Workspace"
                ],
                "summary": "Creates Workspace",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workspace"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workspace"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{object_id}": {
            "delete": {
                "tags": [
                    "Workspace"
                ],
                "summary": "Deletes Workspace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "Workspace"
                ],
                "summary": "Retrieves Workspace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workspace"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Workspace"
                ],
                "summary": "Updates Workspace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workspace"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workspace"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Workspace"
                ],
                "summary": "Updates Workspace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Workspace"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workspace"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workspace"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/filter": {
            "get": {
                "tags": [
                    "Filter"
                ],
                "summary": "Filters, sorts and groups objects using a json with parameters.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "q",
                        "description": "recursive json with filters that supports operators. The json could also contain sort and group"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return filtered, sorted and grouped results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlaskRestless"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid q was sent to the server"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/comment": {
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Delete a group of Comment by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get a list of Comment.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Creates Comment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/comment/count": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Group Comment by the field set in the group_by GET parameter.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "group_by is not specified"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/comment/{object_id}": {
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Deletes Comment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Retrieves Comment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Comment"
                ],
                "summary": "Updates Comment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Comment"
                ],
                "summary": "Updates Comment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/comment_unique": {
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Creates Comment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/upload_report": {
            "post": {
                "tags": [
                    "Workspace",
                    "File"
                ],
                "description": "Upload a report file to create data within the given workspace",
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/websocket_token": {
            "get": {
                "tags": [
                    "Token"
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/v3/agent_websocket_token": {
            "post": {
                "tags": [
                    "Token",
                    "Agent"
                ],
                "description": "Gives a token to establish a websocket connection. For agents logic only",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/v3/vulners/exploits/{cveid}": {
            "get": {
                "tags": [
                    "Vulnerability"
                ],
                "description": "Use Vulns API to get all exploits available for a specific CVE-ID",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/v3/custom_fields_schema": {
            "delete": {
                "tags": [
                    "CustomFieldsSchema"
                ],
                "summary": "Delete a group of CustomFieldsSchema by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "get": {
                "tags": [
                    "CustomFieldsSchema"
                ],
                "summary": "Get a list of CustomFieldsSchema.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomFieldsSchema"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CustomFieldsSchema"
                ],
                "summary": "Creates CustomFieldsSchema",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomFieldsSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomFieldsSchema"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomFieldsSchema"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/custom_fields_schema/{object_id}": {
            "delete": {
                "tags": [
                    "CustomFieldsSchema"
                ],
                "summary": "Deletes CustomFieldsSchema",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "CustomFieldsSchema"
                ],
                "summary": "Retrieves CustomFieldsSchema",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomFieldsSchema"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "CustomFieldsSchema"
                ],
                "summary": "Updates CustomFieldsSchema",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomFieldsSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomFieldsSchema"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomFieldsSchema"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CustomFieldsSchema"
                ],
                "summary": "Updates CustomFieldsSchema",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomFieldsSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomFieldsSchema"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomFieldsSchema"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/agents/active_agents": {
            "get": {
                "tags": [
                    "Agent"
                ],
                "summary": "Get all manifests, Optionally choose latest version with parameter",
                "parameters": [
                    {
                        "in": "version",
                        "name": "agent_version",
                        "description": "latest version to request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/v3/agents/{object_id}": {
            "delete": {
                "tags": [
                    "Agent"
                ],
                "summary": "Deletes Agent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "Agent"
                ],
                "summary": "Retrieves Agent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agent"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Agent"
                ],
                "summary": "Updates Agent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agent"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agent"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Agent"
                ],
                "summary": "Updates Agent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Agent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agent"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/agents": {
            "get": {
                "tags": [
                    "Agent"
                ],
                "summary": "Get a list of Agent.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/agents/get_manifests": {
            "get": {
                "tags": [
                    "Agent"
                ],
                "summary": "Get all manifests, Optionally choose latest version with parameter",
                "parameters": [
                    {
                        "in": "version",
                        "name": "agent_version",
                        "description": "latest version to request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/v3/agents/{agent_id}/run": {
            "post": {
                "tags": [
                    "Agent"
                ],
                "description": "Runs an agent",
                "responses": {
                    "400": {
                        "description": "Bad request"
                    },
                    "201": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/agent_token": {
            "get": {
                "summary": "Get the current TOTP token to register new agents.",
                "tags": [
                    "Agent"
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentAuthToken"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/bulk_create": {
            "post": {
                "tags": [
                    "Bulk"
                ],
                "description": "Creates all faraday objects in bulk for a workspace",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201:tags": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulkCreate"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "403": {
                        "description": "Disabled workspace"
                    },
                    "404": {
                        "description": "Workspace not found"
                    }
                }
            }
        },
        "/v3/token": {
            "get": {
                "tags": [
                    "Token"
                ],
                "description": "Gets a new user token",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/v3/searchfilter": {
            "delete": {
                "tags": [
                    "SearchFilter"
                ],
                "summary": "Delete a group of SearchFilter by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "patch": {
                "tags": [
                    "SearchFilter"
                ],
                "summary": "Update a group of SearchFilter by ids.",
                "responses": {
                    "204": {
                        "description": "Ok"
                    }
                }
            },
            "get": {
                "tags": [
                    "SearchFilter"
                ],
                "summary": "Get a list of SearchFilter.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchFilter"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SearchFilter"
                ],
                "summary": "Creates SearchFilter",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchFilter"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchFilter"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchFilter"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/searchfilter/{object_id}": {
            "delete": {
                "tags": [
                    "SearchFilter"
                ],
                "summary": "Deletes SearchFilter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The resource was deleted successfully"
                    }
                }
            },
            "get": {
                "tags": [
                    "SearchFilter"
                ],
                "summary": "Retrieves SearchFilter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchFilter"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "SearchFilter"
                ],
                "summary": "Updates SearchFilter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchFilter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchFilter"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchFilter"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SearchFilter"
                ],
                "summary": "Updates SearchFilter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "object_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchFilter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchFilter"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Duplicated key found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchFilter"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/preferences": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Show the user preferences",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            },
            "post": {
                "set": {
                    "tags": [
                        "User"
                    ],
                    "description": "Set the user preferences",
                    "responses": {
                        "200": {
                            "description": "Ok"
                        }
                    }
                }
            }
        },
        "/v3/ws/{workspace_name}/export_data": {
            "get": {
                "tags": [
                    "File",
                    "Workspace"
                ],
                "description": "Exports all the workspace data in a XML file",
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        },
        "/v3/settings/reports": {
            "get": {
                "tags": [
                    "settings"
                ],
                "summary": "Retrieves settings of {route_base}",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema_class": null
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Admin user required"
                    }
                }
            },
            "patch": {
                "tags": [
                    "settings"
                ],
                "summary": "Creates/Updates settings of {route_base}",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "schema_class": null
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema_class": null
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Admin user required"
                    }
                }
            }
        },
        "/v3/settings/dashboard": {
            "get": {
                "tags": [
                    "settings"
                ],
                "summary": "Retrieves settings of {route_base}",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema_class": null
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Admin user required"
                    }
                }
            },
            "patch": {
                "tags": [
                    "settings"
                ],
                "summary": "Creates/Updates settings of {route_base}",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "schema_class": null
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema_class": null
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Admin user required"
                    }
                }
            }
        },
        "/v3/swagger": {
            "get": {
                "summary": "Get the swagger documentation.",
                "tags": [
                    "Swagger"
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        }
    },
    "openapi": "3.0.2",
    "components": {
        "schemas": {
            "Command": {
                "type": "object",
                "properties": {
                    "workspace": {
                        "readOnly": true
                    },
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "params": {
                        "type": "string",
                        "nullable": true
                    },
                    "command": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "itime": {},
                    "import_source": {
                        "enum": [
                            "report",
                            "shell",
                            "agent"
                        ],
                        "nullable": true,
                        "maxLength": 6
                    },
                    "duration": {
                        "nullable": true
                    },
                    "ip": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 250
                    },
                    "user": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 250
                    },
                    "tool": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "hostname": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 250
                    },
                    "metadata": {},
                    "creator": {
                        "readOnly": true
                    }
                },
                "required": [
                    "command",
                    "itime",
                    "tool"
                ]
            },
            "ActivityFeed": {
                "type": "object",
                "properties": {
                    "sum_created_vulnerability_critical": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "command": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "sum_created_vulnerability_unclassified": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "sum_created_vulnerability_info": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "itime": {},
                    "sum_created_vulnerabilities": {
                        "readOnly": true,
                        "nullable": true
                    },
                    "sum_created_vulnerability_medium": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "ip": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 250
                    },
                    "user": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 250
                    },
                    "creator": {
                        "readOnly": true
                    },
                    "workspace": {
                        "readOnly": true
                    },
                    "sum_created_services": {
                        "readOnly": true,
                        "nullable": true
                    },
                    "import_source": {
                        "enum": [
                            "report",
                            "shell",
                            "agent"
                        ],
                        "nullable": true,
                        "maxLength": 6
                    },
                    "tool": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "hostname": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 250
                    },
                    "sum_created_vulnerability_low": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "sum_created_vulnerability_high": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "params": {
                        "type": "string",
                        "nullable": true
                    },
                    "sum_created_hosts": {
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "command",
                    "itime",
                    "tool"
                ]
            },
            "Credential": {
                "type": "object",
                "properties": {
                    "parent": {},
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "owned": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "service_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer"
                    },
                    "host_ip": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "minLength": 1
                    },
                    "couchdbid": {
                        "type": "string"
                    },
                    "parent_type": {},
                    "metadata": {},
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "owner": {
                        "type": "string",
                        "readOnly": true
                    },
                    "target": {
                        "type": "string",
                        "readOnly": true
                    },
                    "_rev": {
                        "type": "string",
                        "readOnly": true
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "parent",
                    "parent_type",
                    "username"
                ]
            },
            "Host": {
                "type": "object",
                "properties": {
                    "command_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "owner": {
                        "readOnly": true
                    },
                    "vulns": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "owned": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "services": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "ip": {
                        "type": "string"
                    },
                    "type": {
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "service_summaries": {
                        "readOnly": true
                    },
                    "versions": {
                        "readOnly": true
                    },
                    "mac": {
                        "type": "string",
                        "nullable": true
                    },
                    "metadata": {},
                    "_rev": {
                        "type": "string",
                        "readOnly": true
                    },
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "importance": {
                        "type": "integer"
                    },
                    "severity_counts": {
                        "readOnly": true
                    },
                    "os": {
                        "type": "string"
                    },
                    "default_gateway": {
                        "type": "string",
                        "nullable": true
                    },
                    "credentials": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "hostnames": {}
                },
                "required": [
                    "description"
                ]
            },
            "HostCount": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "high": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "med": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "info": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "unclassified": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "host_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "low": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "critical": {
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "FlaskRestless": {
                "type": "object",
                "properties": {}
            },
            "Service": {
                "type": "object",
                "properties": {
                    "command_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "owner": {
                        "readOnly": true
                    },
                    "vulns": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "version": {
                        "type": "string",
                        "nullable": true
                    },
                    "summary": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "owned": {
                        "type": "boolean"
                    },
                    "port": {
                        "type": "integer",
                        "readOnly": true,
                        "minimum": 0
                    },
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "type": "integer"
                    },
                    "metadata": {},
                    "_rev": {
                        "type": "string",
                        "readOnly": true
                    },
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "protocol": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "status": {
                        "type": "string",
                        "default": "open",
                        "enum": [
                            "open",
                            "closed",
                            "filtered"
                        ]
                    },
                    "ports": {},
                    "host_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "credentials": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "port",
                    "ports",
                    "protocol"
                ]
            },
            "License": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "lictype": {
                        "type": "string",
                        "nullable": true
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "product": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    }
                },
                "required": [
                    "product"
                ]
            },
            "Reference": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Service1": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "protocol": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "ports": {},
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "version": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "default": "open",
                        "enum": [
                            "open",
                            "closed",
                            "filtered"
                        ]
                    },
                    "summary": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "ports",
                    "protocol"
                ]
            },
            "VulnerabilityWeb": {
                "type": "object",
                "properties": {
                    "host_os": {
                        "type": "string",
                        "readOnly": true
                    },
                    "request": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string"
                    },
                    "query": {
                        "type": "string"
                    },
                    "command_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "owner": {
                        "readOnly": true
                    },
                    "reference_instances": {},
                    "confirmed": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "owned": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "method": {
                        "type": "string"
                    },
                    "hostnames": {
                        "readOnly": true
                    },
                    "type": {},
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "risk": {
                        "readOnly": true
                    },
                    "refs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "policyviolations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "parent": {},
                    "impact": {},
                    "cvss3": {},
                    "cvss2": {},
                    "issuetracker": {
                        "readOnly": true
                    },
                    "response": {
                        "type": "string"
                    },
                    "cwe": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "path": {
                        "type": "string"
                    },
                    "resolution": {
                        "type": "string",
                        "nullable": true
                    },
                    "_attachments": {},
                    "parent_type": {},
                    "pname": {
                        "type": "string"
                    },
                    "cve": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {},
                    "tool": {
                        "type": "string"
                    },
                    "external_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "obj_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "_rev": {
                        "type": "string",
                        "readOnly": true
                    },
                    "website": {
                        "type": "string"
                    },
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "easeofresolution": {
                        "type": "string",
                        "enum": [
                            "trivial",
                            "simple",
                            "moderate",
                            "difficult",
                            "infeasible"
                        ],
                        "nullable": true
                    },
                    "data": {
                        "type": "string",
                        "nullable": true
                    },
                    "service": {
                        "readOnly": true,
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Service1"
                            }
                        ]
                    },
                    "params": {
                        "type": "string"
                    },
                    "owasp": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "readOnly": true
                    },
                    "status": {
                        "enum": [
                            "open",
                            "closed",
                            "re-opened",
                            "risk-accepted",
                            "opened"
                        ]
                    },
                    "custom_fields": {},
                    "target": {
                        "type": "string",
                        "readOnly": true
                    },
                    "desc": {
                        "type": "string"
                    },
                    "status_code": {
                        "type": "integer",
                        "nullable": true
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "name",
                    "parent",
                    "parent_type",
                    "severity",
                    "type"
                ]
            },
            "Evidence": {
                "type": "object",
                "properties": {
                    "content_type": {
                        "readOnly": true
                    },
                    "data": {
                        "readOnly": true
                    }
                }
            },
            "VulnerabilityTemplate": {
                "type": "object",
                "properties": {
                    "references": {},
                    "exploitation": {
                        "type": "string"
                    },
                    "create_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "refs": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "creator": {
                        "readOnly": true
                    },
                    "policyviolations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customfields": {},
                    "impact": {},
                    "cwe": {
                        "type": "string",
                        "readOnly": true
                    },
                    "resolution": {
                        "type": "string",
                        "nullable": true
                    },
                    "external_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "creator_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "_rev": {
                        "type": "string",
                        "readOnly": true
                    },
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "easeofresolution": {
                        "type": "string",
                        "enum": [
                            "trivial",
                            "simple",
                            "moderate",
                            "difficult",
                            "infeasible"
                        ],
                        "nullable": true
                    },
                    "data": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "exploitation",
                    "name"
                ]
            },
            "Histogram": {
                "type": "object",
                "properties": {
                    "medium": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "critical": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "high": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "confirmed": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "date": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Workspace": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "readonly": {
                        "type": "boolean"
                    },
                    "importance": {
                        "type": "integer"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "create_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer"
                    },
                    "histogram": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Histogram"
                        }
                    },
                    "duration": {},
                    "update_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "stats": {},
                    "last_run_agent_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "scope": {},
                    "customer": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 250
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Comment": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "object_id": {
                        "type": "integer"
                    },
                    "object_type": {
                        "type": "string",
                        "enum": [
                            "host",
                            "service",
                            "comment",
                            "vulnerability"
                        ]
                    }
                },
                "required": [
                    "object_id",
                    "object_type",
                    "text"
                ]
            },
            "CustomFieldsSchema": {
                "type": "object",
                "properties": {
                    "field_type": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "field_display_name": {
                        "type": "string"
                    },
                    "field_metadata": {
                        "type": "string",
                        "nullable": true
                    },
                    "field_name": {
                        "type": "string"
                    },
                    "table_name": {
                        "type": "string"
                    },
                    "field_order": {
                        "type": "integer"
                    }
                },
                "required": [
                    "field_display_name",
                    "field_name",
                    "field_order",
                    "field_type",
                    "table_name"
                ]
            },
            "AgentsSchedule": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "description"
                ]
            },
            "Executor": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "schedules": {
                        "readOnly": true,
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AgentsSchedule"
                            }
                        ]
                    },
                    "agent_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "last_run": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "parameters_metadata": {
                        "type": "object",
                        "readOnly": true
                    }
                }
            },
            "Agent": {
                "type": "object",
                "properties": {
                    "is_online": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "active": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "create_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "executors": {
                        "readOnly": true,
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Executor"
                            }
                        ]
                    },
                    "update_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "creator": {
                        "readOnly": true
                    },
                    "last_run": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "AgentAuthToken": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "expires_in": {
                        "type": "number"
                    },
                    "total_duration": {
                        "type": "number"
                    }
                },
                "required": [
                    "expires_in",
                    "token",
                    "total_duration"
                ]
            },
            "BulkCommand": {
                "type": "object",
                "properties": {
                    "params": {
                        "type": "string",
                        "nullable": true
                    },
                    "command": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "import_source": {
                        "enum": [
                            "report",
                            "shell",
                            "agent"
                        ],
                        "nullable": true,
                        "maxLength": 6
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "duration": {
                        "type": "integer",
                        "x-unit": "microseconds"
                    },
                    "ip": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 250
                    },
                    "user": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 250
                    },
                    "tool": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "hostname": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 250
                    },
                    "creator": {}
                },
                "required": [
                    "command",
                    "start_date",
                    "tool"
                ]
            },
            "BulkCredential": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "username": {
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "BulkService": {
                "type": "object",
                "properties": {
                    "command_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "owner": {
                        "readOnly": true
                    },
                    "vulns": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "version": {
                        "type": "string",
                        "nullable": true
                    },
                    "summary": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "owned": {
                        "type": "boolean"
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "metadata": {},
                    "_rev": {
                        "type": "string",
                        "readOnly": true
                    },
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "protocol": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "status": {
                        "type": "string",
                        "default": "open",
                        "enum": [
                            "open",
                            "closed",
                            "filtered"
                        ]
                    },
                    "host_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "vulnerabilities": {
                        "default": []
                    },
                    "credentials": {
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BulkCredential"
                        }
                    }
                },
                "required": [
                    "port",
                    "protocol"
                ]
            },
            "Vulnerability": {
                "type": "object",
                "properties": {
                    "host_os": {
                        "type": "string",
                        "readOnly": true
                    },
                    "severity": {
                        "type": "string"
                    },
                    "run_date": {},
                    "command_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "owner": {
                        "readOnly": true
                    },
                    "reference_instances": {},
                    "confirmed": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "owned": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "hostnames": {
                        "readOnly": true
                    },
                    "type": {},
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "risk": {
                        "readOnly": true
                    },
                    "refs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "policyviolations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvss3": {},
                    "impact": {},
                    "cvss2": {},
                    "issuetracker": {
                        "readOnly": true
                    },
                    "cwe": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "resolution": {
                        "type": "string",
                        "nullable": true
                    },
                    "_attachments": {},
                    "cve": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {},
                    "tool": {
                        "type": "string"
                    },
                    "external_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "obj_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "_rev": {
                        "type": "string",
                        "readOnly": true
                    },
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "easeofresolution": {
                        "type": "string",
                        "enum": [
                            "trivial",
                            "simple",
                            "moderate",
                            "difficult",
                            "infeasible"
                        ],
                        "nullable": true
                    },
                    "data": {
                        "type": "string",
                        "nullable": true
                    },
                    "service": {
                        "readOnly": true,
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Service1"
                            }
                        ]
                    },
                    "owasp": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "readOnly": true
                    },
                    "status": {
                        "enum": [
                            "open",
                            "closed",
                            "re-opened",
                            "risk-accepted",
                            "opened"
                        ]
                    },
                    "custom_fields": {},
                    "target": {
                        "type": "string",
                        "readOnly": true
                    },
                    "desc": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "name",
                    "severity",
                    "type"
                ]
            },
            "HostBulk": {
                "type": "object",
                "properties": {
                    "command_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "owner": {
                        "readOnly": true
                    },
                    "vulns": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "owned": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "services": {
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BulkService"
                        }
                    },
                    "ip": {
                        "type": "string"
                    },
                    "type": {
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "service_summaries": {
                        "readOnly": true
                    },
                    "versions": {
                        "readOnly": true
                    },
                    "mac": {
                        "type": "string",
                        "nullable": true
                    },
                    "metadata": {},
                    "_rev": {
                        "type": "string",
                        "readOnly": true
                    },
                    "_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "importance": {
                        "type": "integer"
                    },
                    "severity_counts": {
                        "readOnly": true
                    },
                    "os": {
                        "type": "string"
                    },
                    "default_gateway": {
                        "type": "string",
                        "nullable": true
                    },
                    "vulnerabilities": {
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Vulnerability"
                        }
                    },
                    "credentials": {
                        "default": [],
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BulkCredential"
                        }
                    },
                    "hostnames": {}
                },
                "required": [
                    "description",
                    "ip"
                ]
            },
            "BulkCreate": {
                "type": "object",
                "properties": {
                    "execution_id": {
                        "type": "integer"
                    },
                    "command": {
                        "$ref": "#/components/schemas/BulkCommand"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HostBulk"
                        }
                    }
                },
                "required": [
                    "command",
                    "hosts"
                ]
            },
            "SearchFilter": {
                "type": "object",
                "properties": {
                    "json_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "user_query": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "json_query",
                    "name",
                    "user_query"
                ]
            }
        },
        "responses": {
            "UnauthorizedError": {
                "description": "You are not authenticated or your API key is missing or invalid"
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "Basic"
            }
        }
    },
    "tags": [
        {
            "name": "Agent"
        },
        {
            "name": "Bulk"
        },
        {
            "name": "Command"
        },
        {
            "name": "Comment"
        },
        {
            "name": "Credential"
        },
        {
            "name": "CustomFieldsSchema"
        },
        {
            "name": "File"
        },
        {
            "name": "Filter"
        },
        {
            "name": "Host"
        },
        {
            "name": "Informational"
        },
        {
            "name": "License"
        },
        {
            "name": "SearchFilter"
        },
        {
            "name": "Service"
        },
        {
            "name": "Swagger"
        },
        {
            "name": "Token"
        },
        {
            "name": "User"
        },
        {
            "name": "Vulnerability"
        },
        {
            "name": "VulnerabilityGeneric"
        },
        {
            "name": "VulnerabilityTemplate"
        },
        {
            "name": "Workspace"
        },
        {
            "name": "settings"
        }
    ]
}